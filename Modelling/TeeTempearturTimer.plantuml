@startuml State
header TeaTemperatureTimer
title State Diagram

[*] --> WarmupPhase
WarmupPhase: Wait for decreasing temperature

WarmupPhase --> TemperaturePrediction
state TemperaturePrediction {
    [*] --> DataAcquisition
    DataAcquisition : Get current temperature
    DataAcquisition --> DataProcessing 
    DataProcessing : Calculate predicted times
    DataProcessing --> DataOutput
    DataOutput : Update display
    DataOutput --> DataAcquisition
}

@enduml


@startuml Tea Timer Application
header TeaTemperatureTimer
title Tea Timer Application

class OledDisplay {
    display : SSD1306AsciiWire
    
    void initializeDisplay()
    void showHeating()
    void updateRemainingTime()
}

class TemperatureSensor {
    - sensor : DallasTemperature
}

class SerialTempInput {
}

class SerialInterface {
    - serial : Serial

    + void handleSerial()
}

class TeaTimer {
    temperatures[] : double
    times[] : double
    - temp[] : double
    - index : int
    - timeDrink : double
    - timeCold : double

    void addData(double, double)
    void computeTimes()
    void updateAmbientTemp()
    void updateDataOutput()
}

class WebServer {

}
hide WebServer members

class MQTT {
    ip_address: string
    port: string
    void reconnect()
    void sendTemperature()
    void sendTimeDrink()
    void sendTimeCold()
}

class SerialOutput {

}

class Parameters {
    refreshRate : int
    targetTemp : double
    coldTemp : double
    .. IP settings ..
    ipAddress : string
    SSID : string
    Password : string
    --
    
    + bool setParam()
    + any getParam()
}

interface DataOutput {
    void updateDisplayedData()
}

interface DataInput {
    double getTemperature()
}


TeaTimer <-- TemperatureSensor
TeaTimer <-- SerialTempInput
DataInput <|.. TemperatureSensor
DataInput <|.. SerialTempInput
DataOutput <|.. OledDisplay
DataOutput <|.. WebServer
DataOutput <|.. MQTT
DataOutput <|.. SerialOutput
TeaTimer <-- OledDisplay
TeaTimer <-- WebServer
TeaTimer <-- MQTT
TeaTimer <-- SerialOutput
TeaTimer o-- Parameters

SerialOutput --> SerialInterface
SerialTempInput --> SerialInterface
Parameters --> SerialInterface

note "Not in release v1 ;-)" as not_now_note
WebServer .. not_now_note
MQTT .. not_now_note

note "Configuration of the device" as config_note
config_note .. Parameters

note right of SerialInterface: For config and testing

@enduml


@startuml Sequence
header TeaTemperatureTimer
title Program sequence

control TeaTimer
participant SerialTempInput
boundary SerialInterface
participant SerialOutput

SerialInterface -> SerialInterface : handleSerial
group Data acquisition
TeaTimer -> SerialTempInput : getTemperature
SerialTempInput -> SerialInterface : get temp from \ninput queue
TeaTimer <-- SerialTempInput : Return temperature
end
group Data processing
TeaTimer -> TeaTimer : Get Timestamp
TeaTimer -> TeaTimer : addData
TeaTimer -> TeaTimer : computeTimes
end
group Data output
TeaTimer -> SerialOutput : updateDisplayedData
SerialOutput -> SerialInterface : add predicted times \nto output queue
end

@enduml
